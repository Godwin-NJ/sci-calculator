{"version":3,"sources":["component/calculator/Calculator.js","component/calculator/screen/ComputationScreen.js","component/calculator/screen/ResultScreen.js","component/calculator/screen/Screen.js","component/calculator/keypad/KeypadRow.js","component/Button/Button.js","component/calculator/keypad/Keypad.js","App.js","index.js"],"names":["Calculator","useState","equation","setEquation","result","setResult","onButtonPress","e","equations","pressedBtn","target","innerHTML","clear","indexOf","evalResult","eval","results","Number","isInteger","toFixed","error","alert","trim","substr","length","useEffect","className","ComputationalScreen","props","children","ResultScreen","Screen","ComputationScreen","KeypadRow","Button","classes","undefined","type","push","join","onClick","Keypad","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d83802d2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Screen from \"./screen/Screen\";\r\nimport Keypad from \"../calculator/keypad/Keypad\";\r\n\r\nconst Calculator = () => {\r\n  const [equation, setEquation] = useState(\"\");\r\n  const [result, setResult] = useState(0);\r\n\r\n  const onButtonPress = (e) => {\r\n    let equations = equation;\r\n    // console.log(equations);\r\n    const pressedBtn = e.target.innerHTML;\r\n    // console.log(pressedBtn);\r\n    if (pressedBtn === \"C\") {\r\n      return clear();\r\n    } else if ((pressedBtn >= \"0\" && pressedBtn <= \"9\") || pressedBtn === \".\") {\r\n      // return (equations += pressedBtn);\r\n      return setEquation((equations += pressedBtn));\r\n    } else if ([\"+\", \"-\", \"*\", \"/\", \"%\", \"←\"].indexOf(pressedBtn) !== -1) {\r\n      return setEquation((equations += \" \" + pressedBtn + \" \"));\r\n    } else if (pressedBtn === \"=\") {\r\n      try {\r\n        const evalResult = eval(equations);\r\n        const results = Number.isInteger(evalResult)\r\n          ? evalResult\r\n          : evalResult.toFixed(2);\r\n        return setResult(results);\r\n        // return setEquation(\"\");\r\n      } catch (error) {\r\n        alert(\"Invalid Mathematical equation \");\r\n        return setResult(0);\r\n      }\r\n    } else {\r\n      equations = equations.trim();\r\n      equations = equations.substr(0, equations.length - 1);\r\n    }\r\n    setEquation({ equation: equations });\r\n  };\r\n\r\n  const clear = () => {\r\n    setEquation(\"\");\r\n    setResult(0);\r\n  };\r\n  // const removeNum = (e) => {\r\n  //   let num = { equation };\r\n  //   let soln = num.slice(0, -1);\r\n  //   return setEquation(soln);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setEquation(\"\");\r\n    setResult(0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Screen equation={equation} result={result} />\r\n      <Keypad onButtonPress={onButtonPress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","const ComputationalScreen = (props) => {\r\n  return <div className=\"computation-screen\">{props.children}</div>;\r\n};\r\n\r\nexport default ComputationalScreen;\r\n","const ResultScreen = (props) => {\r\n  return <div className=\"result-screen\">{props.children}</div>;\r\n};\r\n\r\nexport default ResultScreen;\r\n","import React from \"react\";\r\n\r\nimport ComputationScreen from \"./ComputationScreen\";\r\nimport ResultScreen from \"./ResultScreen\";\r\n\r\nconst Screen = ({ result, equation }) => {\r\n  return (\r\n    <div className=\"screen\">\r\n      <ResultScreen>{result}</ResultScreen>\r\n      <ComputationScreen>{equation}</ComputationScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\n\r\nconst KeypadRow = (props) => {\r\n  return <div className=\"keypad-row\">{props.children}</div>;\r\n};\r\n\r\nexport default KeypadRow;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  const classes = [\"btn\"];\r\n  if (typeof props !== undefined && typeof props.type !== undefined)\r\n    classes.push(\"btn--\" + props.type);\r\n  // console.log(classes);\r\n  // console.log(props.onButtonPress);\r\n  // console.log(props.children);\r\n  return (\r\n    <button className={classes.join(\" \")} onClick={props.onButtonPress}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport KeypadRow from \"./KeypadRow\";\r\nimport Button from \"../../Button/Button\";\r\n\r\nconst Keypad = ({ onButtonPress }) => {\r\n  return (\r\n    <section className=\"keypad\">\r\n      <KeypadRow>\r\n        <Button type=\"primary\" onButtonPress={onButtonPress}>\r\n          C\r\n        </Button>\r\n        <Button type=\"primary\" onButtonPress={onButtonPress}>\r\n          &larr;\r\n        </Button>\r\n        <Button type=\"operator\" onButtonPress={onButtonPress}>\r\n          %\r\n        </Button>\r\n        <Button type=\"operator\" onButtonPress={onButtonPress}>\r\n          /\r\n        </Button>\r\n      </KeypadRow>\r\n\r\n      <KeypadRow>\r\n        <Button onButtonPress={onButtonPress}>9</Button>\r\n        <Button onButtonPress={onButtonPress}>8</Button>\r\n        <Button onButtonPress={onButtonPress}>7</Button>\r\n        <Button type=\"operator\" onButtonPress={onButtonPress}>\r\n          *\r\n        </Button>\r\n      </KeypadRow>\r\n\r\n      <KeypadRow>\r\n        <Button onButtonPress={onButtonPress}>6</Button>\r\n        <Button onButtonPress={onButtonPress}>5</Button>\r\n        <Button onButtonPress={onButtonPress}>4</Button>\r\n        <Button type=\"operator\" onButtonPress={onButtonPress}>\r\n          -\r\n        </Button>\r\n      </KeypadRow>\r\n\r\n      <KeypadRow>\r\n        <Button onButtonPress={onButtonPress}>3</Button>\r\n        <Button onButtonPress={onButtonPress}>2</Button>\r\n        <Button onButtonPress={onButtonPress}>1</Button>\r\n        <Button type=\"operator\" onButtonPress={onButtonPress}>\r\n          +\r\n        </Button>\r\n      </KeypadRow>\r\n\r\n      <KeypadRow>\r\n        <Button onButtonPress={onButtonPress}>0</Button>\r\n        <Button onButtonPress={onButtonPress}>.</Button>\r\n        <Button type=\"large\" onButtonPress={onButtonPress}>\r\n          =\r\n        </Button>\r\n      </KeypadRow>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","import \"./App.css\";\nimport Calculator from \"./component/calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}